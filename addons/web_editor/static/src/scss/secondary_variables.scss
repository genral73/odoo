
//------------------------------------------------------------------------------
// Colors
//------------------------------------------------------------------------------

// Colors
$o-color-palette: nth($o-color-palettes, $o-color-palette-number) !default;
$o-color-palette: map-merge($o-base-color-palette, o-map-omit($o-color-palette));
@function palette-color($key) {
    @return map-get($o-color-palette, $key);
}
// Color combinations
$o-color-combinations: nth($o-color-combinations-presets, $o-color-combinations-preset-number) !default;
@for $index from 1 through length($o-color-combinations) {
    $combination: nth($o-color-combinations, $index);
    $-combination-additions: ();
    @each $element, $color in $combination {
        $-combination-additions: map-merge($-combination-additions, (
            'o-cc#{$index}-#{$element}': $color,
        ));
    }

    // Original color palette can contain override of the default combinations
    $o-color-palette: map-merge($-combination-additions, $o-color-palette);
}

// Theme colors
$o-theme-color-palette: nth($o-theme-color-palettes, $o-theme-color-palette-number) !default;
@if not $o-support-13-0-color-system {
    $o-theme-color-palette: map-remove($o-theme-color-palette,
        'alpha',
        'beta',
        'gamma',
        'delta',
        'epsilon'
    );
}
$-dark: palette-color('o-color-2');
$-light: palette-color('o-color-3');
@if lightness($-light) < lightness($-dark) {
    $-dark: palette-color('o-color-3');
    $-light: palette-color('o-color-2');
}
$o-theme-color-palette: map-merge((
    // color 1 and 2 are used to override primary and secondary BS4
    // colors by default, so that theme colors affect the default Odoo layouts
    'primary': palette-color('o-color-1'),
    'secondary': palette-color('o-color-2'),

    // BS light and dark colors are not used for any BS component, just
    // for color utilities.
    'dark': $-dark,
    'light': $-light,
), o-map-omit($o-theme-color-palette));
$o-theme-color-palette: map-merge($o-base-theme-color-palette, o-map-omit($o-theme-color-palette));
@function palette-theme-color($key) {
    @return map-get($o-theme-color-palette, $key);
}

// Gray colors
// Extend grays with transparent ones (for some reason, BS4 create black-50 and
// white-50 but does not allow overridding that with variables).
$o-gray-color-palette: nth($o-gray-color-palettes, $o-gray-color-palette-number) !default;
$o-gray-color-palette: map-merge($o-transparent-grays, o-map-omit($o-gray-color-palette));
$o-gray-color-palette: map-merge($o-base-gray-color-palette, o-map-omit($o-gray-color-palette));
@function palette-gray($key) {
    @return map-get($o-gray-color-palette, $key);
}
